version: '3.5'

services:
  db:
    image: postgres:14.7
    restart: always
    healthcheck:
      test: pg_isready --dbname=star_wars --username=postgres
      interval: 5s
      timeout: 50s
      retries: 5
      start_period: 10s
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: star_wars
    volumes:
      - pgdata:/var/lib/postgresql/data

  elasticmq:
    image: softwaremill/elasticmq
    container_name: elasticmq
    ports:
      - '9324:9324'
      - '9325:9325'
    environment:
      - JAVA_OPTS=-Dconfig.file=/opt/elasticmq.conf
    volumes:
      - ./elasticmq/custom.conf:/opt/elasticmq.conf

  star-wars-api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: star-wars-api
    depends_on:
      db:
        condition: service_healthy
      elasticmq:
        condition: service_started
    env_file:
      - ./backend/.env.docker
    ports:
      - '3000:3000'

  star-wars-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: star-wars-frontend
    depends_on:
      - star-wars-api
    environment:
      - VITE_STAR_WARS_API_BASE_URL=http://localhost:3000
    ports:
      - '4173:4173'

volumes:
  pgdata:

networks:
  default:
